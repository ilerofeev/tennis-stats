{"version":3,"sources":["serviceWorker.ts","types.ts","styles/colors.ts","styles/commonStyles.ts","components/Sidebar.tsx","components/AbsoluteIcon.tsx","components/InfoCard.tsx","styles/theme.ts","components/CardsBlock.tsx","components/LineChart.tsx","components/BarChart.tsx","components/ChartsBlock.tsx","components/MainPage.tsx","components/MonthStats.tsx","components/App.tsx","index.tsx","images/background.jpeg"],"names":["Boolean","window","location","hostname","match","bet","result","source","colors","colorBackground","colorPrimary","colorSecondary","colorOrange","colorGreen","colorRed","colorBlue","colorChart","buttonHover","blockShadow","shadowOrange","shadowGreen","shadowRed","shadowBlue","linearOrange","linearGreen","linearRed","linearBlue","greenArrow","commonStyles","makeStyles","pageTitle","padding","lineHeight","fontSize","color","fontWeight","marginBottom","sidebarMenuStyles","width","margin","backgroundColor","borderRadius","minWidth","useStyles","theme","root","display","drawerWrapper","overflow","background","backgroundPosition","backgroundRepeat","height","drawer","breakpoints","up","flexShrink","menuHeader","textTransform","cursor","backgroundFilter","position","left","top","menuDivider","appBar","marginLeft","menuButton","right","toolbar","mixins","drawerPaper","content","flexGrow","spacing","Sidebar","children","classes","useTheme","React","useState","mobileOpen","setMobileOpen","history","useHistory","handleDrawerToggle","sidebarItems","label","path","icon","className","ListItem","ListItemIcon","ListItemText","primary","Divider","List","map","item","button","key","onClick","push","CssBaseline","aria-label","Hidden","smUp","implementation","Drawer","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","IconButton","edge","iconWrapper","marginRight","float","marginTop","orangeWrapper","boxShadow","greenWrapper","redWrapper","blueWrapper","AbsoluteIcon","join","cardWrapper","card","infoTitle","textAlign","infoDescription","hint","divider","InfoCard","data","title","description","createMuiTheme","values","xs","sm","md","lg","xl","cardsWrapper","flexWrap","justifyContent","CardsBlock","getROI","profit","filter","el","odds","reduce","sum","add","notReturnMatchesCount","length","Math","round","countOfBets","toFixed","toString","slice","matchesWithoutReturn","getWinPercentage","chartTitle","chartDescription","alignItems","chartWrapper","chartBlock","minHeight","chart","LineChart","profitNumbers","datasets","lastProfit","penultProfit","options","maintainAspectRatio","legend","abs","labels","chartOrange","chartBlue","BarChart","horizontal","profitArray","getAverageProfit","chartsBlock","ChartsBlock","monthsData","borderColor","borderWidth","sourcesData","monthData","fill","lineTension","pointBackgroundColor","pointRadius","pointHitRadius","MainPage","commonClasses","id","date","win","wtaline","wtalive","fav","ekfree","return","ekpaid","lose","out","basketline","matches","MonthStats","App","exact","component","to","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.df06f584.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export type Match = {\n  id: number;\n  date: string;\n  odds: number;\n  source:\n    | source.wtaline\n    | source.wtalive\n    | source.ekfree\n    | source.ekpaid\n    | source.basketline;\n  result: result.win | result.lose | result.return;\n  bet: bet.win | bet.fav | bet.out | bet.clean;\n};\n\nexport enum bet {\n  win = 'win',\n  fav = 'fav',\n  out = 'out',\n  clean = 'clean victory',\n}\n\nexport enum result {\n  win = 'win',\n  lose = 'lose',\n  return = 'return',\n}\n\nexport enum source {\n  wtaline = 'WTA line',\n  wtalive = 'WTA live',\n  ekfree = 'EK free',\n  ekpaid = 'EK paid',\n  basketline = 'Basket line',\n}\n","const colors = {\n  colorBackground: '#eee',\n  colorPrimary: '#3c4858',\n  colorSecondary: '#999',\n  colorOrange: '#ffa726',\n  colorGreen: '#66bb6a',\n  colorRed: '#ef5350',\n  colorBlue: '#26c6da',\n  colorChart: 'hsla(0,0%,100%,.8)',\n  buttonHover: 'rgba(200, 200, 200, 0.2)',\n  blockShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.14)',\n  shadowOrange:\n    '0 12px 20px -10px rgba(255, 152, 0, 0.28), 0 4px 20px 0 rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(255, 152, 0, 0.2)',\n  shadowGreen:\n    '0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(76, 175, 80,.4)',\n  shadowRed:\n    '0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(244, 67, 54,.4)',\n  shadowBlue:\n    '0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(0, 172, 193,.4)',\n\n  linearOrange: 'linear-gradient(60deg, #ffa726, #fb8c00)',\n  linearGreen: 'linear-gradient(60deg, #66bb6a, #43a047)',\n  linearRed: 'linear-gradient(60deg, #ef5350, #e53935)',\n  linearBlue: 'linear-gradient(60deg, #26c6da, #00acc1)',\n  greenArrow: '#4caf50',\n};\n\nexport default colors;\n","import { makeStyles } from '@material-ui/core/styles';\nimport colors from './colors';\n\nexport const commonStyles = makeStyles({\n  pageTitle: {\n    padding: '0 0 0 10px',\n    lineHeight: '48px',\n    fontSize: 18,\n    color: colors.colorPrimary,\n    fontWeight: 300,\n    marginBottom: 50,\n  },\n});\n\nexport const sidebarMenuStyles = {\n  '& .MuiIconButton-label': {\n    '& .MuiSvgIcon-root': {\n      color: colors.colorPrimary,\n    },\n  },\n  '& .MuiSvgIcon-root': {\n    color: 'white',\n  },\n  '& .MuiListItem-button': {\n    color: 'white',\n    width: '90%',\n    margin: 'auto',\n    '&:hover': {\n      backgroundColor: colors.buttonHover,\n    },\n    borderRadius: 5,\n  },\n  '& .MuiListItemIcon-root': {\n    minWidth: 45,\n  },\n};\n","import React, { FC } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport background from '../images/background.jpeg';\nimport { useHistory } from 'react-router';\nimport colors from '../styles/colors';\nimport SportsBaseballIcon from '@material-ui/icons/SportsBaseball';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { sidebarMenuStyles } from '../styles/commonStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    ...sidebarMenuStyles,\n    '& ::-webkit-scrollbar': {\n      display: 'none',\n    },\n  },\n  drawerWrapper: {\n    overflow: 'hidden',\n    background: `url(${background})`,\n    backgroundPosition: '60% center',\n    backgroundRepeat: 'no-repeat',\n    height: '100%',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: 240,\n      flexShrink: 0,\n    },\n  },\n  menuHeader: {\n    color: 'white',\n    fontWeight: 400,\n    margin: '10px 12px !important',\n    fontSize: 18,\n    textTransform: 'uppercase',\n    '&:hover': {\n      cursor: 'default !important',\n      backgroundColor: 'transparent !important',\n    },\n  },\n  backgroundFilter: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n  },\n  menuDivider: {\n    width: '90%',\n    margin: 'auto',\n    backgroundColor: colors.colorSecondary,\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - 240px)`,\n      marginLeft: 240,\n    },\n  },\n  menuButton: {\n    position: 'absolute',\n    right: 24,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    fill: `${colors.colorPrimary} !important`,\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: 240,\n    ...sidebarMenuStyles,\n  },\n  content: {\n    position: 'relative',\n    height: '100vh',\n    overflow: 'auto',\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    backgroundColor: colors.colorBackground,\n  },\n}));\n\nconst Sidebar: FC<{ children: React.ReactNode }> = ({ children }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const history = useHistory();\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const sidebarItems = [\n    { label: 'Main page', path: '/main', icon: <HomeIcon /> },\n    { label: 'Month stats', path: '/stats', icon: <DateRangeIcon /> },\n  ];\n\n  const drawer = (\n    <div className={classes.drawerWrapper}>\n      <div className={classes.backgroundFilter}> </div>\n      <ListItem className={classes.menuHeader}>\n        <ListItemIcon>\n          <SportsBaseballIcon />\n        </ListItemIcon>\n        <ListItemText primary={'tennis stats'} />{' '}\n      </ListItem>\n      <Divider className={classes.menuDivider} />\n      <List>\n        {sidebarItems.map((item) => (\n          <ListItem\n            button\n            key={item.path}\n            onClick={() => {\n              if (mobileOpen) handleDrawerToggle();\n              history.push(item.path);\n            }}\n          >\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.label} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={handleDrawerToggle}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport colors from '../styles/colors';\n\nconst useStyles = makeStyles({\n  iconWrapper: {\n    padding: 20,\n    marginRight: 15,\n    float: 'left',\n    marginTop: -30,\n    borderRadius: 3,\n  },\n  orangeWrapper: {\n    background: colors.linearOrange,\n    boxShadow: colors.shadowOrange,\n  },\n  greenWrapper: {\n    background: colors.linearGreen,\n    boxShadow: colors.shadowGreen,\n  },\n  redWrapper: {\n    background: colors.linearRed,\n    boxShadow: colors.shadowRed,\n  },\n  blueWrapper: {\n    background: colors.linearBlue,\n    boxShadow: colors.shadowBlue,\n  },\n  icon: { '& > svg': { width: 40, height: 40, lineHeight: 40 } },\n});\n\nconst AbsoluteIcon: FC<{ color: string; icon: React.ReactNode }> = ({\n  color,\n  icon,\n}) => {\n  const classes = useStyles();\n  return (\n    <div\n      className={[\n        classes.iconWrapper,\n        color === 'Orange'\n          ? classes.orangeWrapper\n          : color === 'Green'\n          ? classes.greenWrapper\n          : color === 'Red'\n          ? classes.redWrapper\n          : classes.blueWrapper,\n      ].join(' ')}\n    >\n      <span className={classes.icon}>{icon}</span>\n    </div>\n  );\n};\n\nexport default AbsoluteIcon;\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AbsoluteIcon from './AbsoluteIcon';\nimport { Divider } from '@material-ui/core';\nimport colors from '../styles/colors';\n\nconst useStyles = makeStyles({\n  cardWrapper: { padding: 10 },\n  card: {\n    display: 'block',\n    backgroundColor: '#fff',\n    minWidth: 250,\n    width: 'calc(25% - 30px)',\n    borderRadius: 3,\n    boxShadow: colors.blockShadow,\n    padding: 15,\n    marginBottom: 40,\n  },\n  infoTitle: {\n    textAlign: 'right',\n    margin: 0,\n    color: colors.colorSecondary,\n  },\n  infoDescription: {\n    textAlign: 'right',\n    margin: '0 0 20px 0',\n    color: colors.colorPrimary,\n    fontSize: '1.825em',\n    fontWeight: 300,\n  },\n  hint: {\n    marginTop: 15,\n    fontSize: 12,\n    color: colors.colorSecondary,\n  },\n  divider: {\n    backgroundColor: colors.colorBackground,\n  },\n});\n\nconst InfoCard: FC<{\n  color: 'Orange' | 'Green' | 'Red' | 'Blue';\n  icon: React.ReactNode;\n  data: { title: string; description: string; hint: string };\n}> = ({ color, icon, data }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.cardWrapper}>\n      <div className={classes.card}>\n        <AbsoluteIcon color={color} icon={icon} />\n        <p className={classes.infoTitle}>{data.title}</p>\n        <h3 className={classes.infoDescription}>{data.description}</h3>{' '}\n        <Divider className={classes.divider} />\n        <div className={classes.hint}>{data.hint}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoCard;\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n});\n\nexport default theme;\n","import InfoCard from './InfoCard';\nimport VerticalAlignCenterIcon from '@material-ui/icons/VerticalAlignCenter';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../styles/theme';\nimport { Match } from '../types';\n\nconst useStyles = makeStyles({\n  cardsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    [theme.breakpoints.up('lg')]: {\n      justifyContent: 'space-between',\n    },\n  },\n});\n\nconst CardsBlock: FC<{ data: Match[] }> = ({ data }) => {\n  const classes = useStyles();\n  const getAverageCoefficient = () =>\n    (data.map((el) => el.odds).reduce((sum, add) => sum + add) / data.length)\n      .toFixed(2)\n      .toString();\n  const getWinPercentage = () => {\n    const matchesWithoutReturn = data.filter((el) => el.result !== 'return');\n    return (\n      (data.filter((el) => el.result === 'win').length /\n        matchesWithoutReturn.length) *\n        100 +\n      '%'\n    );\n  };\n  const getROI = () => {\n    const winMatches = data.filter((el) => el.result === 'win');\n    const winMatchesOdds = winMatches.map((el) => el.odds);\n    const profit = winMatchesOdds.reduce((sum, add) => sum + add);\n    const notReturnMatchesCount = data.filter((el) => el.result !== 'return')\n      .length;\n    return (\n      Math.round(\n        ((profit - notReturnMatchesCount) / notReturnMatchesCount) * 100\n      ) + '%'\n    );\n  };\n  const betSizeDoll = 100;\n  const countOfBets = data.length;\n  const getProfit = () => {\n    const winMatchesCount = data.filter((el) => el.result === 'win').length;\n    const profit =\n      ((winMatchesCount * +getROI().slice(0, 2)) / 100) * betSizeDoll;\n    return profit.toString() + '$';\n  };\n\n  return (\n    <>\n      <div className={classes.cardsWrapper}>\n        <InfoCard\n          data={{\n            title: 'Average coefficient',\n            description: getAverageCoefficient(),\n            hint: `Last ${countOfBets} bets`,\n          }}\n          color={'Orange'}\n          icon={<VerticalAlignCenterIcon />}\n        />\n        <InfoCard\n          data={{\n            title: 'Profit',\n            description: getProfit(),\n            hint: `Last ${countOfBets} bets, flat ${betSizeDoll}$`,\n          }}\n          color={'Green'}\n          icon={<AttachMoneyIcon />}\n        />\n        <InfoCard\n          data={{\n            title: 'Win',\n            description: getWinPercentage(),\n            hint: `Last ${countOfBets} bets`,\n          }}\n          color={'Blue'}\n          icon={<CheckBoxIcon />}\n        />\n        <InfoCard\n          data={{\n            title: 'ROI',\n            description: getROI(),\n            hint: `Last ${countOfBets} bets`,\n          }}\n          color={'Red'}\n          icon={<BusinessCenterIcon />}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CardsBlock;\n","import React, { FC } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport colors from '../styles/colors';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nconst useStyles = makeStyles({\n  chartTitle: {\n    fontWeight: 300,\n    color: colors.colorPrimary,\n    fontSize: 18,\n    marginBottom: 5,\n  },\n  chartDescription: {\n    fontSize: 14,\n    color: colors.colorSecondary,\n    margin: 0,\n    display: 'flex',\n    alignItems: 'flex-start',\n    '& > svg': { color: `${colors.greenArrow} !important`, fontSize: 18 },\n    '& > span:nth-child(2)': { color: colors.greenArrow },\n  },\n  chartWrapper: {\n    minWidth: 280,\n    width: '33%',\n    padding: 15,\n    marginBottom: 40,\n  },\n  chartBlock: {\n    minHeight: 260,\n    padding: 15,\n    borderRadius: 3,\n    backgroundColor: '#fff',\n    boxShadow: colors.blockShadow,\n  },\n  chart: {\n    height: 200,\n    margin: '-35px 0 15px 0',\n    boxShadow: colors.shadowGreen,\n    background: colors.linearGreen,\n    padding: '10px 15px',\n    borderRadius: 3,\n  },\n});\n\nconst LineChart: FC<{\n  data: { labels: string[]; datasets: { data: number[] }[] };\n}> = ({ data }) => {\n  const classes = useStyles();\n  const profitNumbers = data.datasets[0].data;\n  const lastProfit = profitNumbers[profitNumbers.length - 1];\n  const penultProfit = profitNumbers[profitNumbers.length - 2];\n  return (\n    <div className={classes.chartWrapper}>\n      <div className={classes.chartBlock}>\n        <div className={classes.chart}>\n          <Line\n            data={data}\n            options={{\n              maintainAspectRatio: false,\n              legend: { display: false },\n            }}\n          />\n        </div>\n        <div className={classes.chartTitle}>Last month</div>\n        <span className={classes.chartDescription}>\n          <ArrowUpwardIcon />{' '}\n          <span> {Math.abs(lastProfit - penultProfit)}% </span>\n          &nbsp;\n          <span>\n            {lastProfit === penultProfit\n              ? ''\n              : lastProfit > penultProfit\n              ? 'increase'\n              : 'decrease'}{' '}\n            last&nbsp;\n            {+data.labels[data.labels.length - 1] -\n              +data.labels[data.labels.length - 2]}{' '}\n            days\n          </span>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React, { FC } from 'react';\nimport { Bar, HorizontalBar } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport colors from '../styles/colors';\n\nconst useStyles = makeStyles({\n  chartTitle: {\n    fontWeight: 300,\n    color: colors.colorPrimary,\n    fontSize: 18,\n    marginBottom: 5,\n  },\n  chartDescription: {\n    fontSize: 14,\n    color: colors.colorSecondary,\n    margin: 0,\n    display: 'flex',\n    alignItems: 'flex-start',\n    '& span:first-child': { color: colors.greenArrow },\n  },\n  chartWrapper: {\n    minWidth: 280,\n    width: '33%',\n    padding: 15,\n    marginBottom: 40,\n  },\n  chartBlock: {\n    minHeight: 260,\n    padding: 15,\n    borderRadius: 3,\n    backgroundColor: '#fff',\n    boxShadow: colors.blockShadow,\n  },\n  chart: {\n    height: 200,\n    margin: '-35px 0 15px 0',\n    padding: '10px 15px',\n    borderRadius: 3,\n  },\n  chartOrange: {\n    boxShadow: colors.shadowOrange,\n    background: colors.linearOrange,\n  },\n  chartBlue: {\n    boxShadow: colors.shadowBlue,\n    background: colors.linearBlue,\n  },\n});\n\nconst BarChart: FC<{\n  title: string;\n  horizontal?: boolean;\n  color: 'Orange' | 'Blue';\n  data: { labels: string[]; datasets: { data: number[] }[] };\n}> = ({ horizontal, color, data, title }) => {\n  const getAverageProfit = () => {\n    const profitArray = data.datasets[0].data;\n    return (\n      Math.round(\n        profitArray.reduce((sum, add) => sum + add) / profitArray.length\n      ) + '%'\n    );\n  };\n  const classes = useStyles();\n  return (\n    <div className={classes.chartWrapper}>\n      <div className={classes.chartBlock}>\n        <div\n          className={[\n            classes.chart,\n            color === 'Orange' ? classes.chartOrange : classes.chartBlue,\n          ].join(' ')}\n        >\n          {horizontal ? (\n            <HorizontalBar\n              data={data}\n              options={{\n                maintainAspectRatio: false,\n                legend: { display: false },\n              }}\n            />\n          ) : (\n            <Bar\n              data={data}\n              options={{\n                maintainAspectRatio: false,\n                legend: { display: false },\n              }}\n            />\n          )}\n        </div>\n        <div className={classes.chartTitle}>{title}</div>\n        <span className={classes.chartDescription}>\n          <span>{getAverageProfit()}</span>&nbsp;\n          <span>on average</span>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default BarChart;\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LineChart from './LineChart';\nimport BarChart from './BarChart';\nimport colors from '../styles/colors';\nimport { Match } from '../types';\n\nconst useStyles = makeStyles({\n  chartsBlock: {\n    marginLeft: -10,\n    marginRight: -10,\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n});\n\nconst ChartsBlock: FC<{ data: Match[] }> = ({ data }) => {\n  const classes = useStyles();\n  const monthsData = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        backgroundColor: colors.colorChart,\n        borderColor: colors.colorChart,\n        borderWidth: 1,\n        data: [34, 23, 14, 42, 60, 39, 28],\n      },\n    ],\n  };\n  const sourcesData = {\n    labels: ['WTA line', 'WTA live', 'EK free', 'EK paid', 'Basket line'],\n    datasets: [\n      {\n        backgroundColor: colors.colorChart,\n        borderColor: colors.colorChart,\n        borderWidth: 1,\n        data: [33, 32, 52, 34, 24],\n      },\n    ],\n  };\n  const monthData = {\n    labels: ['1', '5', '10', '15', '20', '25', '30'],\n    datasets: [\n      {\n        label: '',\n        fill: false,\n        lineTension: 0.3,\n        borderColor: colors.colorChart,\n        pointBackgroundColor: '#fff',\n        pointRadius: 4,\n        pointHitRadius: 0,\n        data: [5, 13, 10, 17, 29, 25, 34],\n      },\n    ],\n  };\n  return (\n    <div className={classes.chartsBlock}>\n      <BarChart title={'Last 7 months'} color={'Orange'} data={monthsData} />\n      <LineChart data={monthData} />\n      <BarChart\n        title={'Last month'}\n        color={'Blue'}\n        horizontal={true}\n        data={sourcesData}\n      />\n    </div>\n  );\n};\n\nexport default ChartsBlock;\n","import React, { useState } from 'react';\nimport { commonStyles } from '../styles/commonStyles';\nimport CardsBlock from './CardsBlock';\nimport ChartsBlock from './ChartsBlock';\nimport { bet, Match, result, source } from '../types';\n\nfunction MainPage() {\n  const commonClasses = commonStyles();\n  const [matches] = useState<Match[]>([\n    {\n      id: 1,\n      date: '02.08.20',\n      bet: bet.win,\n      odds: 1.78,\n      source: source.wtaline,\n      result: result.win,\n    },\n    {\n      id: 2,\n      date: '07.08.20',\n      bet: bet.win,\n      odds: 1.56,\n      source: source.wtalive,\n      result: result.win,\n    },\n    {\n      id: 3,\n      date: '12.08.20',\n      bet: bet.fav,\n      odds: 1.69,\n      source: source.ekfree,\n      result: result.return,\n    },\n    {\n      id: 4,\n      date: '17.08.20',\n      bet: bet.fav,\n      odds: 2.1,\n      source: source.ekpaid,\n      result: result.lose,\n    },\n    {\n      id: 5,\n      date: '23.08.20',\n      bet: bet.out,\n      odds: 1.73,\n      source: source.basketline,\n      result: result.win,\n    },\n    {\n      id: 6,\n      date: '28.08.20',\n      bet: bet.fav,\n      odds: 1.83,\n      source: source.wtaline,\n      result: result.win,\n    },\n  ]);\n  return (\n    <>\n      <div className={commonClasses.pageTitle}>Statistics</div>\n      <CardsBlock data={matches} />\n      <ChartsBlock data={matches} />\n    </>\n  );\n}\n\nexport default MainPage;\n","import React from 'react';\nimport { commonStyles } from '../styles/commonStyles';\n\nfunction MonthStats() {\n  const commonClasses = commonStyles();\n  return <div className={commonClasses.pageTitle}>Month stats</div>;\n}\n\nexport default MonthStats;\n","import React from 'react';\nimport Sidebar from './Sidebar';\nimport { Route, Redirect } from 'react-router-dom';\nimport MainPage from './MainPage';\nimport MonthStats from './MonthStats';\n\nfunction App() {\n  return (\n    <Sidebar>\n      <Route exact path=\"/main\" component={MainPage} />\n      <Route exact path=\"/stats\" component={MonthStats} />\n      <Redirect to={'/main'} />\n    </Sidebar>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.a1e2e792.jpeg\";"],"sourceRoot":""}